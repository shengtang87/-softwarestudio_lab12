{"version":3,"sources":["assets\\Script\\Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import score from \"./score\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component \r\n{\r\n\r\n    private anim = null; //this will use to get animation component\r\n\r\n    private animateState = null; //this will use to record animationState\r\n\r\n    @property(cc.Prefab)\r\n    private bulletPrefab: cc.Prefab = null;\r\n\r\n    @property(score)\r\n    private score: score = null;\r\n\r\n    private bulletPool = null; // this is a bullet manager, and it control the bullet resource\r\n\r\n    private playerSpeed: number = 0;\r\n\r\n    private zDown: boolean = false; // key for player to go left\r\n\r\n    private xDown: boolean = false; // key for player to go right\r\n\r\n    private jDown: boolean = false; // key for player to shoot\r\n\r\n    private kDown: boolean = false; // key for player to jump\r\n\r\n    private onGround: boolean = false;\r\n\r\n    private isDead: boolean = true;\r\n\r\n    onLoad()\r\n    {\r\n        // ===================== TODO =====================\r\n        // 1. Use \"this.anim\" to record Animation component\r\n        // ================================================\r\n\r\n        cc.director.getCollisionManager().enabled = true;\r\n\r\n        cc.director.getPhysicsManager().enabled = true;\r\n\r\n        this.bulletPool = new cc.NodePool('Bullet');\r\n\r\n        let maxBulletNum = 5;\r\n\r\n        for(let i: number = 0; i < maxBulletNum; i++)\r\n        {\r\n            let bullet = cc.instantiate(this.bulletPrefab);\r\n\r\n            this.bulletPool.put(bullet);\r\n        }\r\n    }\r\n\r\n    start() \r\n    {\r\n        // add key down and key up event\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        this.playerMovement(dt);\r\n\r\n        this.playerAnimation();\r\n    }\r\n\r\n    onKeyDown(event) \r\n    {\r\n        switch(event.keyCode) \r\n        {\r\n            case cc.macro.KEY.z:\r\n\r\n                this.zDown = true;\r\n\r\n                this.xDown = false;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.x:\r\n\r\n                this.xDown = true;\r\n\r\n                this.zDown = false;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.j:\r\n\r\n                this.jDown = true;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.k:\r\n\r\n                this.kDown = true;\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event)\r\n    {\r\n        switch(event.keyCode) \r\n        {\r\n            case cc.macro.KEY.z:\r\n\r\n                this.zDown = false;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.x:\r\n\r\n                this.xDown = false;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.j:\r\n\r\n                this.jDown = false;\r\n\r\n                break;\r\n\r\n            case cc.macro.KEY.k:\r\n\r\n                this.kDown = false;\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    private playerMovement(dt)\r\n    {\r\n        if(this.isDead)\r\n            this.playerSpeed = 0;\r\n        else if(this.jDown || this.anim.getAnimationState('shoot').isPlaying)\r\n            this.playerSpeed = 0;\r\n        else if(this.zDown)\r\n            this.playerSpeed = -300;\r\n        else if(this.xDown)\r\n            this.playerSpeed = 300;\r\n        else\r\n            this.playerSpeed = 0;\r\n\r\n        this.node.x += this.playerSpeed * dt;  //move player\r\n    }\r\n\r\n    private playerAnimation()\r\n    {\r\n        this.node.scaleX = (this.zDown) ? -1 : (this.xDown) ? 1 : this.node.scaleX;\r\n\r\n        if(this.isDead)\r\n        {\r\n            //reset player position and play reborn animation\r\n            if(this.animateState == null || this.animateState.name != 'reborn')\r\n            {\r\n                this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);\r\n\r\n                // ===================== TODO =====================\r\n                // 1. reset the player's position to (-192, 255)\r\n                // 2. play reborn animation and use \"this.animateState\" to record animation state\r\n                // 3. register a callback function when reborn animation finish, and set the value of this.isDead to false in the callback function\r\n                // ================================================\r\n\r\n                //reset score value\r\n                this.score.resetScore();\r\n            }\r\n        }\r\n        else if(!this.anim.getAnimationState('shoot').isPlaying && !this.anim.getAnimationState('jump').isPlaying && this.onGround) // move animation can play only when shoot or jump animation finished\r\n        {\r\n            if(this.jDown)\r\n                this.animateState = this.anim.play('shoot');\r\n            else if(this.kDown)\r\n            {\r\n                    this.animateState = this.anim.play('jump');\r\n\r\n                    this.jump();\r\n            }\r\n            else if(this.zDown || this.xDown)\r\n            {\r\n                if(this.animateState == null || this.animateState.name != 'move') // when first call or last animation is not move\r\n                    this.animateState = this.anim.play('move');\r\n            }\r\n            else\r\n            {\r\n                //if no key is pressed and the player is on ground, stop all animations and go back to idle\r\n                if(this.animateState == null || this.animateState.name != 'idle')\r\n                    this.animateState = this.anim.play('idle');\r\n            }\r\n        }\r\n    }\r\n\r\n    //give velocity to the player\r\n    private jump()\r\n    {\r\n        this.onGround = false;\r\n\r\n\r\n        // ===================== TODO =====================\r\n        // 1. set the linearVelocity of RigidBody to (0, 1500)\r\n        // ================================================\r\n    }\r\n\r\n    // call this when player shoots the bullet.\r\n    private createBullet()\r\n    {\r\n        let bullet = null;\r\n\r\n        if (this.bulletPool.size() > 0) \r\n            bullet = this.bulletPool.get(this.bulletPool);\r\n\r\n        if(bullet != null)\r\n            bullet.getComponent('Bullet').init(this.node);\r\n    }\r\n\r\n    //check if the collision is valid or not\r\n    onBeginContact(contact, selfCollider, otherCollider)\r\n    {\r\n        if(otherCollider.tag == 2 && !this.isDead) //enemy tag\r\n            this.isDead = true;\r\n\r\n        // ===================== TODO ===================== \r\n        // 1. Use otherCollider.tag to check if the player collides with ground or block(the tag of both ground and block are 1), \r\n        // and do step2 and step3 when the condition is true\r\n        // 2. set the value of this.onGround to true\r\n        // 3. check if jump animation still playing, if yes, stop it and play idle animation \r\n        // ================================================\r\n    }\r\n}"]}